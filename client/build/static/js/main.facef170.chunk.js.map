{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/ThoughtList/index.js","components/ThoughtForm/index.js","pages/Home.js","pages/NoMatch.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","style","fontWeight","Footer","ThoughtList","thoughts","title","length","map","thought","key","createdAt","username","Date","parseInt","toString","ThoughtForm","useState","formState","setFormState","characterCount","setCharacterCount","handleChange","event","target","value","name","onSubmit","preventDefault","placeholder","onChange","type","Home","isLoaded","setIsLoaded","setThoughts","useEffect","a","fetch","res","json","jsonData","data","sort","b","console","log","fetchData","NoMatch","Profile","props","userParam","useParams","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.facef170.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link\n          to={`/`}\n          style={{ fontWeight: 700 }}\n          className=\"text-light\"\n        >\n          <h1>Deep Thoughts</h1>\n        </Link>{' '}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container\">&copy;2020 by Lernantino</div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Renders the list of thoughts\nconst ThoughtList = ({ thoughts, title }) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n  return (\n    <div>\n      <h3>{title}</h3>\n      {thoughts &&\n        thoughts.map((thought) => (\n          <div key={thought.createdAt} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/profile/${thought.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {thought.username}'s thought on {new Date(parseInt(thought.createdAt)).toString()}\n              </Link>{' '}\n            </p>\n            {thought.thought &&\n              <p className=\"px-2 mt-2\">\n                {thought.thought}\n              </p>\n            }\n            \n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import React, { useState } from \"react\";\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\",\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","import React, { useState, useEffect } from 'react';\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nconst Home = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [thoughts, setThoughts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"/api/users\");\n        const jsonData = await res.json();\n        const data = jsonData.sort((a, b) => (a.createdAt < b.createdAt) ? 1 : -1);\n        setThoughts([...data]);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        <div className=\"col-12 mb-3\">\n          <ThoughtForm />\n        </div>\n        <div className={`col-12 mb-3 `}>\n          {!isLoaded ? (\n            <div>Loading...</div>\n          ) : (\n              <ThoughtList thoughts={thoughts} setThoughts={setThoughts} title=\"Some Feed for Thought(s)...\" />\n            )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ThoughtList from '../components/ThoughtList';\n\nconst Profile = props => {\n  const { username: userParam } = useParams();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [thoughts, setThoughts] = useState([{\n    username: userParam,\n    createdAt: '', \n    thought: '',\n  }]);\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${userParam}'s` : 'your'} profile.\n        </h2>\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-9\">\n        {!isLoaded ? (\n            <div>Loading...</div>\n          ) : (\n          <ThoughtList thoughts={thoughts} title={`${userParam}'s thoughts...`} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Profile from './pages/Profile';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"flex-column justify-flex-start min-100-vh\">\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/profile/:username\" component={Profile} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}